package tictactoe;
import java.util.Scanner;

public class Main {
    public static Scanner scanner = new Scanner(System.in);

    public static char[][] board = new char[3][3];
    public static String occupied = "";
    public static String winner = "";
    public static String outcome = "";
    public static int col, row, k;
    public static char symbol = '0';

    public static void main(String[] args)
    {
        System.out.print("Enter cells:");
        occupied = scanner.nextLine();

        k = 0;
        for (int i = 0; i < 3; i++)
        {
            for (int j = 0; j < 3; j++, k++)
            {
                board[i][j] = occupied.charAt(k);
            }
        }
        printBoard();

        do
        {
            //printBoard();
            System.out.print("Enter the coordinates:");

            String line = scanner.nextLine();
            if((line.charAt(0) < '0') || (line.charAt(0) > '9'))
            {
                // You should enter numbers!
                System.out.print("You should enter numbers!");
                continue;
            }
            if(line.length() >= 3)
            {
                col = (int)(line.charAt(0) - '0');
                row = (int)(line.charAt(2) - '0');
            }
            else
            {
                // You should enter numbers!
                System.out.print("You should enter numbers!");
                continue;
            }
        } while (!decideIfCanPlay());

        String ret = play();
        if(ret != null)
        {
            System.out.print(ret);
        }
    }

    public static String play()
    {
        decideSymbol(board);
        board[3 - row][col - 1] = symbol;
        printBoard();
        returnWinner(row, col);

        if (returnWinner(row, col) == null)
        {
            //
            for(int i = 0; i < 3; ++i)
            {
                for(int j = 0; j < 3; ++j)
                {
                    if(board[i][j] == '_')
                    {
                        outcome = "Game not finished";
                        return outcome;
                    }
                }
            }

            outcome = "Draw";
            return outcome;
        }

        return null;
    }

    public static char decideSymbol(char[][]board)
    {
        int countX = 0;
        int countO = 0;

        for (int i = 0; i < 3; i++)
        {
            for (int j = 0; j < 3; j++)
            {
                if (board[i][j]  == 'X')
                {
                    countX++;
                }
                else if (board[i][j]  == 'O')
                {
                    countO++;
                }
            }
        }
        if (countX <= countO)
        {
            symbol = 'X';
        }
        else
        {
            symbol = 'O';
        }
        return(symbol);
    }

    public static void printBoard() {
        System.out.print("---------\n");
        for (int i = 0; i < 3; i++)
        {
            System.out.print("| ");
            for (int j = 0; j < 3; j++)
            {
                System.out.print(board[i][j] + " ");
            }
            System.out.print("| \n");
        }
        System.out.print("---------\n");
    }

    public static String returnWinner(int rMove, int cMove)
    {
        for(int i = 0; i < 3; ++i)
        {
            if((board[i][0] == board[i][1]) && (board[i][1] == board[i][2]))
            {
                if(board[i][0] == 'O' || board[i][0] == 'X')
                {
                    // winner is board[i][0];
                    winner = String.valueOf(board[i][0]);
                    System.out.println(winner + " wins");
                    return (winner + " wins");
                }
            }

            if((board[0][i] == board[1][i]) && (board[1][i] == board[2][i]))
            {
                if(board[0][i] == 'O' || board[0][i] == 'X')
                {
                    // winner is board[0][i];
                    winner = String.valueOf(board[0][i]);
                    System.out.println(winner + " wins");
                    return (winner + " wins");
                }
            }
        }

        // przekątna w prawo:
        if (board[0][0] == board[1][1] &&
                board[0][0] == board[2][2]) {
            winner = String.valueOf(board[0][0]);
            System.out.println(winner + " wins");
            return (winner + " wins");
        }
        // przekątna w lewo:
        if (board[0][2] == board[1][1] &&
                board[0][2] == board[2][0]) {
            winner = String.valueOf(board[0][2]);
            System.out.println(winner + " wins");
            return (winner + " wins");
        }

        return null;
    }

    public static boolean decideIfFree()
    {
        System.out.println(board[3 - row][col - 1] + col + " " + row);

        if ((board[3 - row][col - 1]) == '_')
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    public static boolean decideIfInRange() {
        if (((col >= 1) && (col <= 3)) && ((row >= 1) && (row <= 3))) {
            return true;
        } else {
            return false;
        }
    }
    public static boolean decideIfCanPlay()
    {
        if (!decideIfInRange())
        {
            System.out.println("Coordinates should be from 1 to 3!");
            return false;
        }
        else if (!decideIfFree())
        {
            System.out.println("This cell is occupied! Choose another one!");
            return false;
        }
        return true;
    }
}

